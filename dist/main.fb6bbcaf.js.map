{"version":3,"sources":["js/main.js"],"names":["content","document","getElementById","videoContainer","adContainer","OO","Pulse","setPulseHost","contentMetadata","tags","requestSettings","linearPlaybackPositions","session","createSession","adPlayer","createAdPlayer","adContainerElement","adPlayerListener","startContentPlayback","play","style","display","pauseContentPlayback","pause","illegalOperationOccurred","message","console","warn","sessionEnded","openClickThrough","url","window","open","adClickThroughOpened","initialPlay","onPlay","startSession","contentStarted","onTimeUpdate","contentPositionChanged","currentTime","onPause","contentPaused","onEnded","contentFinished","addEventListener"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACA,IAAIC,cAAc,GAAGF,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAArB;AACA,IAAIE,WAAW,GAAGH,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AAEAG,EAAE,CAACC,KAAH,CAASC,YAAT,CAAsB,iCAAtB;AAEA,IAAIC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,CAAE,aAAF,EAAiB,aAAjB,EAAgC,cAAhC;AADc,CAAtB;AAIA,IAAIC,eAAe,GAAG;AACpBC,EAAAA,uBAAuB,EAAE,CAAE,EAAF,CADL,CAErB;;AAFqB,CAAtB;AAKA,IAAIC,OAAO,GAAGP,EAAE,CAACC,KAAH,CAASO,aAAT,CAAuBL,eAAvB,EAAwCE,eAAxC,CAAd;AAEA,IAAII,QAAQ,GAAGT,EAAE,CAACC,KAAH,CAASS,cAAT,CAAwB;AAAEC,EAAAA,kBAAkB,EAAEZ;AAAtB,CAAxB,CAAf;AAEA,IAAIa,gBAAgB,GAAG;AACrB;AACAC,EAAAA,oBAAoB,EAAE,gCAAW;AAC/BlB,IAAAA,OAAO,CAACmB,IAAR;AACAhB,IAAAA,cAAc,CAACiB,KAAf,CAAqBC,OAArB,GAA+B,OAA/B,CAF+B,CAES;AACzC,GALoB;AAOrB;AACAC,EAAAA,oBAAoB,EAAE,gCAAW;AAC/BtB,IAAAA,OAAO,CAACuB,KAAR;AACApB,IAAAA,cAAc,CAACiB,KAAf,CAAqBC,OAArB,GAA+B,MAA/B,CAF+B,CAEQ;AACxC,GAXoB;AAarB;AACA;AACAG,EAAAA,wBAAwB,EAAE,kCAASC,OAAT,EAAkB;AAC1CC,IAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCF,OAApC;AACD,GAjBoB;AAmBrB;AACAG,EAAAA,YAAY,EAAE,wBAAW;AACvBzB,IAAAA,cAAc,CAACiB,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACD,GAtBoB;AAwBrB;AACA;AACAQ,EAAAA,gBAAgB,EAAE,0BAASC,GAAT,EAAc;AAC9BC,IAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAD8B,CAG9B;;AACAhB,IAAAA,QAAQ,CAACmB,oBAAT;AACD;AA/BoB,CAAvB;AAkCA,IAAIC,WAAW,GAAG,IAAlB;;AAEA,SAASC,MAAT,GAAkB;AAChB,MAAGD,WAAH,EAAgB;AACdA,IAAAA,WAAW,GAAG,KAAd;AACAlC,IAAAA,OAAO,CAACuB,KAAR,GAFc,CAEG;;AACjBT,IAAAA,QAAQ,CAACsB,YAAT,CAAsBxB,OAAtB,EAA+BK,gBAA/B,EAHc,CAGoC;AACnD,GAJD,MAIO;AACL;AACAH,IAAAA,QAAQ,CAACsB,YAAT,CAAsBxB,OAAtB,EAA+BK,gBAA/B;AACAH,IAAAA,QAAQ,CAACuB,cAAT;AACD;AACF;;AAED,SAASC,YAAT,GAAwB;AACtBxB,EAAAA,QAAQ,CAACyB,sBAAT,CAAgCvC,OAAO,CAACwC,WAAxC;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB;AACA3B,EAAAA,QAAQ,CAAC4B,aAAT;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB7B,EAAAA,QAAQ,CAAC8B,eAAT;AACD;;AAED5C,OAAO,CAAC6C,gBAAR,CAAyB,MAAzB,EAAiCV,MAAjC;AACAnC,OAAO,CAAC6C,gBAAR,CAAyB,OAAzB,EAAkCJ,OAAlC;AACAzC,OAAO,CAAC6C,gBAAR,CAAyB,YAAzB,EAAuCP,YAAvC;AACAtC,OAAO,CAAC6C,gBAAR,CAAyB,OAAzB,EAAkCF,OAAlC","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["var content = document.getElementById('video_player');\nvar videoContainer = document.getElementById('video_container');\nvar adContainer = document.getElementById('adContainer');\n\nOO.Pulse.setPulseHost('http://pulse-demo.videoplaza.tv');\n\nvar contentMetadata = {\n  tags: [ 'cat_preroll', 'cat_midroll' ,'cat_postroll']\n};\n\nvar requestSettings = {\n  linearPlaybackPositions: [ 10 ]\n // insertionPointFilter: ['ON_CONTENT_END']\n};\n\nvar session = OO.Pulse.createSession(contentMetadata, requestSettings);\n\nvar adPlayer = OO.Pulse.createAdPlayer({ adContainerElement: adContainer });\n\nvar adPlayerListener = {\n  // Here, the Ad Player is telling the integration to start (or resume) playing the main content\n  startContentPlayback: function() {\n    content.play();\n    videoContainer.style.display = 'block'; // or any other means to make the content player visible\n  },\n\n  // The Ad Player is telling the integration to pause the main content, so linear ads can be played\n  pauseContentPlayback: function() {\n    content.pause();\n    videoContainer.style.display = 'none'; // or any other means to make the content player invisible\n  },\n\n  // If you tell the Ad Player to perform some action which is unexpected due to\n  // the current state, this function is called to let the integration know\n  illegalOperationOccurred: function(message) {\n    console.warn('Illegal operation: ', message);\n  },\n\n  // The content finished playback, and if any post-rolls were served, they also finished\n  sessionEnded: function() {\n    videoContainer.style.display = 'block';\n  },\n\n  // When the viewer clicks an ad, this function is called to let the integration know, and provide\n  // it with the information needed to open the clickthrough URL\n  openClickThrough: function(url) {\n    window.open(url);\n\n    // Tell the Ad Player the clickthrough URL was opened, so the associated VAST event can be tracked\n    adPlayer.adClickThroughOpened();\n  }\n};\n\nvar initialPlay = true;\n\nfunction onPlay() {\n  if(initialPlay) {\n    initialPlay = false;\n    content.pause(); // Pause the content so we can play pre-rolls\n    adPlayer.startSession(session, adPlayerListener); // Start the Ad Player event flow\n  } else {\n    // When the content is resumed, call contentStarted\n    adPlayer.startSession(session, adPlayerListener);\n    adPlayer.contentStarted();\n  }\n}\n\nfunction onTimeUpdate() {\n  adPlayer.contentPositionChanged(content.currentTime);\n}\n\nfunction onPause() {\n  // Let the Ad Player know the content is paused\n  adPlayer.contentPaused();\n}\n\nfunction onEnded() {\n  adPlayer.contentFinished();\n}\n\ncontent.addEventListener('play', onPlay);\ncontent.addEventListener('pause', onPause);\ncontent.addEventListener('timeupdate', onTimeUpdate);\ncontent.addEventListener('ended', onEnded);\n"]}