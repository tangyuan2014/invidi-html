{"version":3,"sources":["js/main.js"],"names":["content","document","getElementById","videoContainer","adContainer","initialPlay","onPlay","pause","adPlayer","startSession","session","adPlayerListener","contentStarted","onTimeUpdate","contentPositionChanged","currentTime","onPause","contentPaused","onEnded","contentFinished","addEventListener","OO","Pulse","setPulseHost","contentMetadata","tags","requestSettings","linearPlaybackPositions","createSession","createAdPlayer","adContainerElement","startContentPlayback","play","style","display","pauseContentPlayback","illegalOperationOccurred","message","console","warn","sessionEnded","openClickThrough","url","window","open","adClickThroughOpened"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACA,IAAIC,cAAc,GAAGF,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAArB;AACA,IAAIE,WAAW,GAAGH,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AACA,IAAIG,WAAW,GAAG,IAAlB;;AAEA,SAASC,MAAT,GAAkB;AAChB,MAAID,WAAJ,EAAiB;AACfA,IAAAA,WAAW,GAAG,KAAd;AACAL,IAAAA,OAAO,CAACO,KAAR,GAFe,CAEE;;AACjBC,IAAAA,QAAQ,CAACC,YAAT,CAAsBC,OAAtB,EAA+BC,gBAA/B,EAHe,CAGmC;AACnD,GAJD,MAIO;AACL;AACAH,IAAAA,QAAQ,CAACI,cAAT;AACD;AACF;;AAED,SAASC,YAAT,GAAwB;AACtBL,EAAAA,QAAQ,CAACM,sBAAT,CAAgCd,OAAO,CAACe,WAAxC;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB;AACAR,EAAAA,QAAQ,CAACS,aAAT;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB;AACA;AACA;AACA;AACA;AACAV,EAAAA,QAAQ,CAACI,cAAT;AACAJ,EAAAA,QAAQ,CAACW,eAAT;AACD;;AAEDnB,OAAO,CAACoB,gBAAR,CAAyB,MAAzB,EAAiCd,MAAjC;AACAN,OAAO,CAACoB,gBAAR,CAAyB,OAAzB,EAAkCJ,OAAlC;AACAhB,OAAO,CAACoB,gBAAR,CAAyB,YAAzB,EAAuCP,YAAvC;AACAb,OAAO,CAACoB,gBAAR,CAAyB,OAAzB,EAAkCF,OAAlC,GAEA;;AACAG,EAAE,CAACC,KAAH,CAASC,YAAT,CAAsB,iCAAtB;AAEA,IAAIC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,aAAV,EAAyB,cAAzB;AADc,CAAtB;AAIA,IAAIC,eAAe,GAAG;AACpBC,EAAAA,uBAAuB,EAAE,CAAC,EAAD;AADL,CAAtB;AAIA,IAAIjB,OAAO,GAAGW,EAAE,CAACC,KAAH,CAASM,aAAT,CAAuBJ,eAAvB,EAAwCE,eAAxC,CAAd;AAEA,IAAIlB,QAAQ,GAAGa,EAAE,CAACC,KAAH,CAASO,cAAT,CAAwB;AAAEC,EAAAA,kBAAkB,EAAE1B;AAAtB,CAAxB,CAAf;AAEA,IAAIO,gBAAgB,GAAG;AACrB;AACAoB,EAAAA,oBAAoB,EAAE,gCAAY;AAChC/B,IAAAA,OAAO,CAACgC,IAAR;AACA7B,IAAAA,cAAc,CAAC8B,KAAf,CAAqBC,OAArB,GAA+B,OAA/B,CAFgC,CAEQ;AACzC,GALoB;AAOrB;AACAC,EAAAA,oBAAoB,EAAE,gCAAY;AAChCnC,IAAAA,OAAO,CAACO,KAAR;AACAJ,IAAAA,cAAc,CAAC8B,KAAf,CAAqBC,OAArB,GAA+B,MAA/B,CAFgC,CAEO;AACxC,GAXoB;AAarB;AACA;AACAE,EAAAA,wBAAwB,EAAE,kCAAUC,OAAV,EAAmB;AAC3CC,IAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCF,OAApC;AACD,GAjBoB;AAmBrB;AACAG,EAAAA,YAAY,EAAE,wBAAY;AACxBrC,IAAAA,cAAc,CAAC8B,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACD,GAtBoB;AAwBrB;AACA;AACAO,EAAAA,gBAAgB,EAAE,0BAAUC,GAAV,EAAe;AAC/BC,IAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAD+B,CAG/B;;AACAlC,IAAAA,QAAQ,CAACqC,oBAAT;AACD;AA/BoB,CAAvB","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["var content = document.getElementById('video_player');\nvar videoContainer = document.getElementById('video_container');\nvar adContainer = document.getElementById('adContainer');\nvar initialPlay = true;\n\nfunction onPlay() {\n  if (initialPlay) {\n    initialPlay = false;\n    content.pause(); // Pause the content so we can play pre-rolls\n    adPlayer.startSession(session, adPlayerListener); // Start the Ad Player event flow\n  } else {\n    // When the content is resumed, call contentStarted\n    adPlayer.contentStarted();\n  }\n}\n\nfunction onTimeUpdate() {\n  adPlayer.contentPositionChanged(content.currentTime);\n}\n\nfunction onPause() {\n  // Let the Ad Player know the content is paused\n  adPlayer.contentPaused();\n}\n\nfunction onEnded() {\n  //this is key to make post roll work, the thing is when a video end,\n  //it will first trigger a 'pause' event and then an 'end' event. The pause\n  //event would trigger adPlayer to set the pulse status to pause, but the\n  //following end event would check if the status is pause, if so it will throw\n  //an exception and then skip the post roll.\n  adPlayer.contentStarted();\n  adPlayer.contentFinished();\n}\n\ncontent.addEventListener('play', onPlay);\ncontent.addEventListener('pause', onPause);\ncontent.addEventListener('timeupdate', onTimeUpdate);\ncontent.addEventListener('ended', onEnded);\n\n//set the pulse host\nOO.Pulse.setPulseHost('http://pulse-demo.videoplaza.tv');\n\nvar contentMetadata = {\n  tags: ['house', 'cat_midroll', 'cat_postroll']\n};\n\nvar requestSettings = {\n  linearPlaybackPositions: [10]\n};\n\nvar session = OO.Pulse.createSession(contentMetadata, requestSettings);\n\nvar adPlayer = OO.Pulse.createAdPlayer({ adContainerElement: adContainer });\n\nvar adPlayerListener = {\n  // Here, the Ad Player is telling the integration to start (or resume) playing the main content\n  startContentPlayback: function () {\n    content.play();\n    videoContainer.style.display = 'block'; // or any other means to make the content player visible\n  },\n\n  // The Ad Player is telling the integration to pause the main content, so linear ads can be played\n  pauseContentPlayback: function () {\n    content.pause();\n    videoContainer.style.display = 'none'; // or any other means to make the content player invisible\n  },\n\n  // If you tell the Ad Player to perform some action which is unexpected due to\n  // the current state, this function is called to let the integration know\n  illegalOperationOccurred: function (message) {\n    console.warn('Illegal operation: ', message);\n  },\n\n  // The content finished playback, and if any post-rolls were served, they also finished\n  sessionEnded: function () {\n    videoContainer.style.display = 'block';\n  },\n\n  // When the viewer clicks an ad, this function is called to let the integration know, and provide\n  // it with the information needed to open the clickthrough URL\n  openClickThrough: function (url) {\n    window.open(url);\n\n    // Tell the Ad Player the clickthrough URL was opened, so the associated VAST event can be tracked\n    adPlayer.adClickThroughOpened();\n  }\n};"]}