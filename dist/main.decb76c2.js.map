{"version":3,"sources":["js/main.js"],"names":["content","document","getElementById","videoContainer","adContainer","OO","Pulse","setPulseHost","contentMetadata","tags","requestSettings","linearPlaybackPositions","insertionPointFilter","session","createSession","adPlayer","createAdPlayer","adContainerElement","adPlayerListener","startContentPlayback","play","style","display","pauseContentPlayback","pause","illegalOperationOccurred","message","console","warn","sessionEnded","openClickThrough","url","window","open","adClickThroughOpened","initialPlay","onPlay","startSession","contentStarted","onTimeUpdate","contentPositionChanged","currentTime","onPause","contentPaused","onEnded","contentFinished","addEventListener"],"mappings":";AAAA,IAAIA,EAAUC,SAASC,eAAe,gBAClCC,EAAiBF,SAASC,eAAe,mBACzCE,EAAcH,SAASC,eAAe,eAE1CG,GAAGC,MAAMC,aAAa,mCAEtB,IAAIC,EAAkB,CACpBC,KAAM,CAAE,cAAe,cAAe,iBAGpCC,EAAkB,CACpBC,wBAAyB,CAAE,IAC3BC,qBAAsB,CAAC,oBAAoB,oBAAoB,mBAG7DC,EAAUR,GAAGC,MAAMQ,cAAcN,EAAiBE,GAElDK,EAAWV,GAAGC,MAAMU,eAAe,CAAEC,mBAAoBb,IAEzDc,EAAmB,CAErBC,qBAAsB,WACpBnB,EAAQoB,OACRjB,EAAekB,MAAMC,QAAU,SAIjCC,qBAAsB,WACpBvB,EAAQwB,QACRrB,EAAekB,MAAMC,QAAU,QAKjCG,yBAA0B,SAASC,GACjCC,QAAQC,KAAK,sBAAuBF,IAItCG,aAAc,WACZ1B,EAAekB,MAAMC,QAAU,SAKjCQ,iBAAkB,SAASC,GACzBC,OAAOC,KAAKF,GAGZhB,EAASmB,yBAITC,GAAc,EAElB,SAASC,IACJD,GACDA,GAAc,EACdnC,EAAQwB,QACRT,EAASsB,aAAaxB,EAASK,IAG/BH,EAASuB,iBAIb,SAASC,IACPxB,EAASyB,uBAAuBxC,EAAQyC,aAG1C,SAASC,IAEP3B,EAAS4B,gBAGX,SAASC,IACP7B,EAAS8B,kBAGX7C,EAAQ8C,iBAAiB,OAAQV,GACjCpC,EAAQ8C,iBAAiB,QAASJ,GAClC1C,EAAQ8C,iBAAiB,aAAcP,GACvCvC,EAAQ8C,iBAAiB,QAASF","file":"main.decb76c2.js","sourceRoot":"..","sourcesContent":["var content = document.getElementById('video_player');\nvar videoContainer = document.getElementById('video_container');\nvar adContainer = document.getElementById('adContainer');\n\nOO.Pulse.setPulseHost('http://pulse-demo.videoplaza.tv');\n\nvar contentMetadata = {\n  tags: [ 'cat_preroll', 'cat_midroll', 'cat_postroll' ]\n};\n\nvar requestSettings = {\n  linearPlaybackPositions: [ 10 ], // Request 2 mid-roll breaks\n  insertionPointFilter: ['ON_BEFORE_CONTENT','PLAYBACK_POSITION','ON_CONTENT_END']\n};\n\nvar session = OO.Pulse.createSession(contentMetadata, requestSettings);\n\nvar adPlayer = OO.Pulse.createAdPlayer({ adContainerElement: adContainer });\n\nvar adPlayerListener = {\n  // Here, the Ad Player is telling the integration to start (or resume) playing the main content\n  startContentPlayback: function() {\n    content.play();\n    videoContainer.style.display = 'block'; // or any other means to make the content player visible\n  },\n\n  // The Ad Player is telling the integration to pause the main content, so linear ads can be played\n  pauseContentPlayback: function() {\n    content.pause();\n    videoContainer.style.display = 'none'; // or any other means to make the content player invisible\n  },\n\n  // If you tell the Ad Player to perform some action which is unexpected due to\n  // the current state, this function is called to let the integration know\n  illegalOperationOccurred: function(message) {\n    console.warn('Illegal operation: ', message);\n  },\n\n  // The content finished playback, and if any post-rolls were served, they also finished\n  sessionEnded: function() {\n    videoContainer.style.display = 'block';\n  },\n\n  // When the viewer clicks an ad, this function is called to let the integration know, and provide\n  // it with the information needed to open the clickthrough URL\n  openClickThrough: function(url) {\n    window.open(url);\n\n    // Tell the Ad Player the clickthrough URL was opened, so the associated VAST event can be tracked\n    adPlayer.adClickThroughOpened();\n  }\n};\n\nvar initialPlay = true;\n\nfunction onPlay() {\n  if(initialPlay) {\n    initialPlay = false;\n    content.pause(); // Pause the content so we can play pre-rolls\n    adPlayer.startSession(session, adPlayerListener); // Start the Ad Player event flow\n  } else {\n    // When the content is resumed, call contentStarted\n    adPlayer.contentStarted();\n  }\n}\n\nfunction onTimeUpdate() {\n  adPlayer.contentPositionChanged(content.currentTime);\n}\n\nfunction onPause() {\n  // Let the Ad Player know the content is paused\n  adPlayer.contentPaused();\n}\n\nfunction onEnded() {\n  adPlayer.contentFinished();\n}\n\ncontent.addEventListener('play', onPlay);\ncontent.addEventListener('pause', onPause);\ncontent.addEventListener('timeupdate', onTimeUpdate);\ncontent.addEventListener('ended', onEnded);\n"]}